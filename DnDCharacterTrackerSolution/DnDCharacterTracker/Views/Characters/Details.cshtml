@model DnDCharacterTracker.Models.Character

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Character</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Level)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Level)
        </dd>

        @foreach (KeyValuePair<string, int> AbilityScore in Model.AbilityScores)
        {
            <dt class="col-sm-2">
                @Html.Raw(AbilityScore.Key)
            </dt>
            <dd class="col-sm-10">
                @Html.Raw(AbilityScore.Value + $" ({MathF.Floor((float)((float)AbilityScore.Value - 10f) /2)})")
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Race)
        </dt>
        @if (Model.FK_Race != 1)
        {
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Race.Name)
            </dd>


            foreach (var raceFeature in Model.RaceFeatures)
            {
                <dt class="col-sm-2">
                    @Html.Raw(raceFeature.Name)
                </dt>
                <dd class="col-sm-10">
                    @Html.Raw(raceFeature.Description)
                </dd>

            }
        }
        else
        {
            <dd class="col-sm-10">
                <a asp-action="ChooseRaceSetup" asp-route-id="@Model.Id">Choose Race</a>
            </dd>
        }

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Classes) <a asp-action="ChooseClassSetup" asp-route-id="@Model.Id">Level up</a>
        </dt>
        @if (Model.ClassIntermediaries.Count != 0)
        {
            @for (int i = 0; i < (Model.ClassIntermediaries.Count); i++)
            {
                <dd class="col-sm-10">
                    @Html.Raw(Model.ClassIntermediaries[i].Class.Name + ", level " + Model.ClassIntermediaries[i].Level.ToString())
                </dd>
                foreach (var clasFeature in Model.ClassFeatures)
                {
                    <dt class="col-sm-2">
                        @Html.Raw(clasFeature.Name)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.Raw(clasFeature.Description)
                    </dd>
                }
            }

        }
        else
        {
            <dd class="col-sm-10">
                <a asp-action="ChooseClassSetup" asp-route-id="@Model.Id">Choose Class</a>
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Proficiencies)
        </dt>
        <dd class="col-sm-10">
            @foreach (var proficiency in Model.Proficiencies)
            {

                @Html.Raw(proficiency.Name)<br />

            }
            @foreach (var proficiency in Model.SkillProficiencies)
            {

                @Html.Raw(proficiency.Skill.Name)<br />

            }
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
