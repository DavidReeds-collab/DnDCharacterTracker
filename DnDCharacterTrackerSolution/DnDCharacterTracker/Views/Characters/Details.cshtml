@model DnDCharacterTracker.Models.Character

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Character</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Strenght)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Strenght)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Dexterity)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Dexterity)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Constitution)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Constitution)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Wisdom)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Wisdom)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Intelligence)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Intelligence)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Charisma)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Charisma)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Race)
        </dt>
        @if (Model.FK_Race != 1)
        {
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Race.Name)
            </dd>


            foreach (var raceFeature in Model.RaceFeatures)
            {
                <dt class="col-sm-2">
                    @Html.Raw(raceFeature.Name)
                </dt>
                <dd class="col-sm-10">
                    @Html.Raw(raceFeature.Description)
                </dd>

            }
        }
        else
        {
            <dd class="col-sm-10">
                <a asp-action="ChooseRaceSetup" asp-route-id="@Model.Id">Choose Race</a>
            </dd>
        }

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Classes)
        </dt>
        @if (Model.ClassIntermediaries.Count != 0)
        {
            @foreach (CharacterClass Class in Model.ClassIntermediaries)
            {
                <dd class="col-sm-10">
                    @Html.Raw(Class.Class.Name + ", level " + Class.Level.ToString())
                </dd>
            }
        }
        else
        {
            <dd class="col-sm-10">
                <a asp-action="ChooseClassSetup" asp-route-id="@Model.Id">Choose Class</a>
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Proficiencies)
        </dt>
        <dd class="col-sm-10">
            @foreach (var proficiency in Model.Proficiencies)
            {

                @Html.Raw(proficiency.Name)<br />

            }
        </dd>
        </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
